// Copyright (c) 2017 Alain Martin, Matthieu Talbot
//
// This file is part of FRUT.
//
// FRUT is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// FRUT is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with FRUT.  If not, see <http://www.gnu.org/licenses/>.

#include <string>


enum Keywords
{
  ARCHITECTURE,
  AU_BINARY_LOCATION,
  BINARYDATACPP_SIZE_LIMIT,
  BINARYDATA_NAMESPACE,
  BINARY_LOCATION,
  BINARY_NAME,
  BUILD_AAX,
  BUILD_AUDIOUNIT,
  BUILD_AUDIOUNIT_V3,
  BUILD_RTAS,
  BUILD_VST,
  BUILD_VST3,
  BUNDLE_IDENTIFIER,
  CHARACTER_SET,
  CODE_SIGNING_IDENTITY,
  COMPANY_EMAIL,
  COMPANY_NAME,
  COMPANY_WEBSITE,
  CUSTOM_PLIST,
  CUSTOM_XCODE_FLAGS,
  CUSTOM_XCODE_RESOURCE_FOLDERS,
  CXX_LANGUAGE_STANDARD,
  CXX_LIBRARY,
  CXX_STANDARD_TO_USE,
  DEVELOPMENT_TEAM_ID,
  DOCUMENT_FILE_EXTENSIONS,
  EXTERNAL_LIBRARIES_TO_LINK,
  EXTRA_COMPILER_FLAGS,
  EXTRA_FRAMEWORKS,
  EXTRA_LIBRARY_SEARCH_PATHS,
  EXTRA_LINKER_FLAGS,
  EXTRA_PREPROCESSOR_DEFINITIONS,
  GENERATE_MANIFEST,
  HEADER_SEARCH_PATHS,
  ICON_LARGE,
  ICON_SMALL,
  INCREMENTAL_LINKING,
  JUCER_VERSION,
  KEY_FOCUS,
  LINK_TIME_OPTIMISATION,
  MIDI_EFFECT_PLUGIN,
  OPTIMISATION,
  OSX_ARCHITECTURE,
  OSX_BASE_SDK_VERSION,
  OSX_DEPLOYMENT_TARGET,
  PKGCONFIG_LIBRARIES,
  PLATFORM_TOOLSET,
  PLUGIN_AAX_CATEGORY,
  PLUGIN_AAX_IDENTIFIER,
  PLUGIN_AU_EXPORT_PREFIX,
  PLUGIN_AU_MAIN_TYPE,
  PLUGIN_CHANNEL_CONFIGURATIONS,
  PLUGIN_CODE,
  PLUGIN_DESCRIPTION,
  PLUGIN_IS_A_SYNTH,
  PLUGIN_MANUFACTURER,
  PLUGIN_MANUFACTURER_CODE,
  PLUGIN_MIDI_INPUT,
  PLUGIN_MIDI_OUTPUT,
  PLUGIN_NAME,
  PLUGIN_RTAS_CATEGORY,
  POSTBUILD_COMMAND,
  POSTBUILD_SHELL_SCRIPT,
  PREBUILD_COMMAND,
  PREBUILD_SHELL_SCRIPT,
  PREPROCESSOR_DEFINITIONS,
  PROJECT_FILE,
  PROJECT_ID,
  PROJECT_NAME,
  PROJECT_TYPE,
  PROJECT_VERSION,
  RELAX_IEEE_COMPLIANCE,
  RUNTIME_LIBRARY,
  STRIP_LOCAL_SYMBOLS,
  TARGET_PROJECT_FOLDER,
  TREAT_WARNINGS_AS_ERRORS,
  USE_IPP_LIBRARY,
  VST3_BINARY_LOCATION,
  VST3_SDK_FOLDER,
  VST_BINARY_LOCATION,
  VST_CATEGORY,
  VST_SDK_FOLDER,
  WARNING_LEVEL,
  WHOLE_PROGRAM_OPTIMISATION,
};


template <Keywords keyword>
std::string getKeyword();

template <>
std::string getKeyword<PROJECT_ID>()
{
  return "PROJECT_ID";
}

template <>
std::string getKeyword<CXX_LANGUAGE_STANDARD>()
{
  return "CXX_LANGUAGE_STANDARD";
}
